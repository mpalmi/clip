## <summary>Systemd components (not PID 1)</summary>


#######################################
## <summary>
##      Send messages to systemd_logind over dbus.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
#
interface(`systemd_dbus_send_systemd_logind',`
	gen_require(`
		type systemd_logind_t;
		class dbus send_msg;
	')

	allow $1 systemd_logind_t:dbus send_msg;
')


#######################################
## <summary>
##      Make the specified domain trusted
##      to inherit and use systemd_logind
##	file descriptors.
## </summary>
## <param name="domain">
##      <summary>
##      Domain allowed access.
##      </summary>
## </param>
## <rolecap/>
#
interface(`systemd_fd_use_systemd_logind',`
	gen_require(`
		type systemd_logind_t;
	')
	
	allow $1 systemd_logind_t:fd use;	
')

########################################
## <summary>
##      Make the specified type usable for
##      systemd unit files.
## </summary>
## <param name="type">
##      <summary>
##      Type to be used for systemd unit files.
##      </summary>
## </param>
#
interface(`systemd_unit_file',`
   gen_require(`
       attribute systemdunitfile;
   ')

   files_type($1)
   typeattribute $1 systemdunitfile;
')


########################################
## <summary>
##	Read all systemd unit files.
## </summary>
## <param name="domain">
##	<summary>
##	Domain allowed access.
##	</summary>
## </param>
#
interface(`systemd_read_unitfile_files',`
	gen_require(`
		attribute systemdunitfile;
		type lib_t;
	')

	read_files_pattern($1, systemd_unit_file_t, systemdunitfile)
')
